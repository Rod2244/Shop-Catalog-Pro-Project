Routes in the website

*products (grid)
*products id (details)
*products id specs (nested)
*cart and about

Query in list in the website

*?q = (Query used for searching in a search bar example: phone = all products that have a phone in their name or description)
*?cat = (Category used for showing products that under a certain category example: electronics = all products under electronics)
*?min = and ?max = (Controls the minimum or maximum price range example min = 1000&max = 5000 then all the products that are ranging at 1000 until 5000 will be displayed)
*sort = (Used for sorting product list example sort = price then all product will show all the product based of their prices in order and usually ascending)
        (another example: sort =  rating then all product will be sorted based on the rating from highest to lowest)
*Clear Filters resets URL (used for clearing/ removing all query paramas from the url)

From details, a ‘Back to results’ link returns to preserved list query params.
(This means when a certain user click a product where the user already have a listed query params
 like /shop?q=shoes&cat=men&sort=price this then hedecided to go back to the result of his query
 params, he will not go back to the /shop but he will go back to /shop?q=shoes&cat=men&sort=price)

Props: pass discountCode to /cart; pass gridColumns to /products.
(This just passing props to use in cart and products example in /cart
 you want to use the discountmoto10 to get a 10% discount then used
 it like a props to pass it to the /cart same goes to the /products
 if you want to display only 4 products per column then pass it like props
 so it could determine how many products it should display)

Bonus:
*In summary all the product that the user add to cart will be saved
 in the browser's storage so even the user refreshes the page or closes and
 reopen the page, the cart will still remember the product that the user
 add to cart and it also show in the url if how many products that in the
 cart.


Navigation bar
-Home page
-product page
-cart page
-about page
-logo 
-search bar


import { useParams, Outlet, Link, useNavigate } from "react-router-dom";
import { useEffect, useState } from "react";
import { motion } from "framer-motion";

function ProductDetails() {
  const { id } = useParams();
  const navigate = useNavigate();
  const [product, setProduct] = useState(null);

  useEffect(() => {
    fetch("/ProductStorage/ProductsStorage.json")
      .then((res) => res.json())
      .then((data) => {
        const found = data.find((p) => p.id.toString() === id);
        setProduct(found);
      })
      .catch((err) => console.error("Failed to load product:", err));
  }, [id]);

  if (!product)
    return <p className="text-gray-400 text-center mt-20">Loading...</p>;

  return (
    <div className="text-white px-6 py-10">
      {/* Back Button */}
      <button
        onClick={() => navigate(-1)}
        className="mb-4 text-indigo-400 hover:text-indigo-200 flex items-center gap-2"
      >
        <span className="material-icons">arrow_back</span> Back
      </button>

      {/* Main Container */}
      <div className="max-w-4xl mx-auto grid md:grid-cols-2 gap-10 bg-gray-800 p-8 rounded-2xl shadow-lg">
        {/* Left: Product Image */}
        <motion.img
          src={product.image}
          alt={product.name}
          className="w-full h-80 object-cover rounded-xl"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 0.5 }}
        />

        {/* Right: Product Info */}
        <div className="flex flex-col justify-between">
          <div>
            <h2 className="text-3xl font-bold mb-3">{product.name}</h2>
            <p className="text-indigo-300 mb-2">{product.category}</p>
            <p className="text-xl font-semibold mb-2">${product.price}</p>
            <p className="text-yellow-400 mb-4">⭐ {product.rating}</p>
            <p className="text-gray-300 mb-6">{product.description}</p>
          </div>

          {/* Add to Cart Button */}
          <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              onClick={() => navigate(-1)}
              className="flex items-center gap-2 text-indigo-400 hover:text-indigo-200"
            >
              <span className="material-icons">arrow_back</span>
              Back
            </motion.button>

          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            className="bg-indigo-500 hover:bg-indigo-600 px-5 py-2 rounded-xl font-semibold"
          >
            Add to Cart
          </motion.button>
        </div>
      </div>

      {/* Tabs for Nested Routes */}
      <div className="max-w-4xl mx-auto mt-8 bg-gray-800 p-6 rounded-2xl shadow-lg">
        <div className="flex gap-6 border-b border-gray-600 pb-2">
          <Link
            to={`/products/${id}`}
            className="hover:text-indigo-400"
          >
            Overview
          </Link>
          <Link
            to={`/product/${id}/specs`}
            className="hover:text-indigo-400"
          >
            Specs
          </Link>
        </div>

        {/* Nested route content */}
        <div className="mt-6">
          <Outlet />
        </div>
      </div>
    </div>
  );
}

export default ProductDetails;
